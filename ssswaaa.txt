swagger: '2.0'
info:
  description: API REST de cadastro de usuarios.
  version: '1.0'
  title: Usuarios API REST
  termsOfService: Terms of Service
  contact:
    name: Leonardo Borchartt
    email: leonardo.borchartt@compasso.com.br
  license:
    name: Apache License Version 2.0
    url: 'https://www.apache.org/licesen.html'
host: 'localhost:8080'
basePath: /
tags:
  - name: user-controller
    description: User Controller
paths:
  /users:
    get:
      tags:
        - user-controller
      summary: Return user by name
      operationId: findAllUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: name
          required: false
          type: string
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: Save a user.
      operationId: saveUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User1'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{id}':
    get:
      tags:
        - user-controller
      summary: Retorn a user by your id.
      operationId: listUserUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-controller
      summary: Delet a user by your id.
      operationId: deletUserByIdUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  User1:
    type: object
    properties:
      name:
        type: string
        example: "Leonardo Borchartt"
      nick:
        type: string
        example: "leo"
      email:
        type: string
        example: leo@compasso.com.br
      phone:
        type: string
        example: (48)98877-6655
      gender:
        type: string
        example: "M"
      birthday:
        type: string
        format: date
        example: "1993-10-09"
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: "1"
      name:
        type: string
        example: "Leonardo Borchartt"
      nick:
        type: string
        example: "leo"
      email:
        type: string
        example: leo@compasso.com.br
      phone:
        type: string
        example: (48)98877-6655
      gender:
        type: string
        example: "M"
      birthday:
        type: string
        format: date
        example: "1993-10-09"
      age:
        type: string
        format: String
        example: 26
      